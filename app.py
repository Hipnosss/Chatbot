from flask import Flask, request, jsonify
import openai
import os
from flask_cors import CORS
import difflib

app = Flask(__name__)
CORS(app)

openai.api_key = os.getenv("OPENAI_API_KEY")

contenido_sitio = """
First Hill es una tienda colombiana especializada en calzado industrial y de senderismo.
Ofrecemos botas para hombre y mujer en categorÃ­as Industrial, Outdoor y Tactical.

Productos destacados y precios:
- Botas Alabama ProTrek Outdoor para Hombre (CafÃ©) - $288.000 COP (antes $320.000)
- Botas Arizona WildStride Outdoor para Hombre (Negro Goma) - $320.000 COP
- Botas Charlotte PowerTech Outdoor para Mujer (Negro) - $270.000 COP
- Botas Dakota Elite Outdoor para Hombre (Verde) - $320.000 COP
- Botas Denver PowerStep Industrial para Mujer (Miel) - $360.000 COP
- Botas Denver PowerStep Industrial para Mujer (Negro Gris) - $360.000 COP
- Botas Denver TitanStep Industrial para Hombre (CafÃ©) - $360.000 COP
- Botas Nevada TrailMaster Outdoor para Hombre (Verde) - $320.000 COP
- Botas Cincinnati IronForce Industrial para Hombre (Negro Amarillo) - $360.000 COP
- Botas Cincinnati IronForce Industrial para Hombre (CafÃ©) - $360.000 COP
- Botas Cincinnati IronForce Industrial para Hombre (Miel) - $360.000 COP

Calidad garantizada: Todos los productos pasan por inspecciÃ³n antes de despacho.
Cotizaciones por mayor (+60 pares).
Cobertura nacional con envÃ­o gratis a toda Colombia.
Pago seguro con pasarela que cumple todos los requisitos de seguridad.

EnvÃ­os:
- Tiempo de entrega: 2 a 5 dÃ­as hÃ¡biles.
- EnvÃ­o gratis en toda Colombia.

Cambios y devoluciones: Hasta 15 dÃ­as despuÃ©s de la compra.
MÃ©todos de pago: Tarjeta, PSE, Nequi, Daviplata.

Contacto:
- DirecciÃ³n: Cl 69 Sur #18h-51, BogotÃ¡
- Tel: (+57) 3144403880
- Email: contacto@firsthill.com.co
- Redes sociales: Instagram, Facebook y WhatsApp: @FIRSTHILLCOLOMBIA

GuÃ­a de tallas en la web. PolÃ­ticas de privacidad, cambios y condiciones tambiÃ©n estÃ¡n disponibles en lÃ­nea.

Â© 2025 FIRST HILL S.A.S. Todos los derechos reservados.
"""

faq = {
    "Â¿cÃ³mo sÃ© mi talla de calzado?": "Puedes consultar nuestra guÃ­a de tallas en la secciÃ³n de ayuda en la web.",
    "Â¿quÃ© tipos de bota son resistentes al agua?": "Las botas de la lÃ­nea Outdoor Pro cuentan con resistencia al agua.",
    "Â¿quÃ© significa que una bota tenga puntera de acero?": "ProtecciÃ³n para los dedos contra impactos, ideal en ambientes industriales.",
    "Â¿cuÃ¡nto tardan los envÃ­os?": "Entre 2 y 5 dÃ­as hÃ¡biles segÃºn la ciudad.",
    "Â¿puedo cambiar un producto si no me sirve?": "SÃ­, tienes hasta 15 dÃ­as para cambios.",
    "Â¿quÃ© mÃ©todos de pago aceptan?": "Tarjeta, PSE, Nequi y Daviplata.",
    "Â¿cÃ³mo contacto con atenciÃ³n al cliente?": "WhatsApp +57 3144403880 o contacto@firsthill.com.co"
}

temas_permitidos = [
    "bota", "zapato", "calzado", "pago", "talla", "envÃ­o", "envios",
    "pedido", "devoluciÃ³n", "devoluciones", "guÃ­a", "seguridad", "trabajo", "senderismo",
    "polÃ­tica", "polÃ­ticas", "contacto", "precio", "precios", "cotizaciÃ³n", "envÃ­o gratis"
]

saludos = ["hola", "buenos dÃ­as", "buen dÃ­a", "buenas tardes", "buenas noches", "buenas"]

memoria_usuario = {}

def pregunta_similar(pregunta, lista_preguntas, umbral=0.7):
    # Retorna True si pregunta es similar a alguna en lista_preguntas usando difflib
    for p in lista_preguntas:
        seq = difflib.SequenceMatcher(None, pregunta, p)
        if seq.ratio() >= umbral:
            return True, p
    return False, None

@app.route("/ask", methods=["POST"])
def ask():
    data = request.get_json()
    user_id = data.get("user_id", "default_user")
    question = data.get("question", "").lower().strip()
    if not question:
        return jsonify({"answer": "Por favor, ingresa una pregunta vÃ¡lida."})

    # Saludo: mostrar menÃº
    if any(saludo in question for saludo in saludos):
        menu = (
            "ðŸ‘‹ Â¡Hola! Soy tu asistente de First Hill. Â¿En quÃ© puedo ayudarte?\n\n"
            "1. Ver tipos de calzado\n"
            "2. GuÃ­a de tallas\n"
            "3. MÃ©todos de pago\n"
            "4. Contacto o devoluciones\n"
            "5. Pregunta abierta\n"
            "(Escribe solo el nÃºmero de opciÃ³n o tu pregunta)"
        )
        return jsonify({"answer": menu})

    # Buscar FAQ con similitud
    similar, clave_faq = pregunta_similar(question, list(faq.keys()))
    if similar:
        return jsonify({"answer": faq[clave_faq]})

    # Guardar talla si indican "mi talla es X"
    if "mi talla es" in question:
        talla = ''.join(filter(str.isdigit, question))
        if talla:
            memoria_usuario[user_id] = {"talla": talla}
            return jsonify({"answer": f"Â¡Perfecto! RecordarÃ© que tu talla es {talla}."})
        else:
            return jsonify({"answer": "No entendÃ­ tu talla. Por favor indÃ­cala con nÃºmeros."})

    # Consultar talla guardada
    if "Â¿cuÃ¡l es mi talla" in question or "cual es mi talla" in question:
        if user_id in memoria_usuario and "talla" in memoria_usuario[user_id]:
            return jsonify({"answer": f"Tu talla es {memoria_usuario[user_id]['talla']}."})
        else:
            return jsonify({"answer": "AÃºn no me has dicho tu talla."})

    # Validar tema permitido
    if not any(palabra in question for palabra in temas_permitidos):
        return jsonify({"answer": "Solo puedo ayudarte con temas relacionados al calzado y nuestra tienda. Â¿Tienes una consulta sobre productos, tallas o envÃ­os?"})

    # Crear prompt para OpenAI
    prompt = f"{contenido_sitio}\n\nPregunta: {question}"

    try:
        completion = openai.ChatCompletion.create(
            model="gpt-3.5-turbo",
            messages=[
                {"role": "system", "content": "Eres un asistente experto en calzado industrial y outdoor. Responde solo con la informaciÃ³n de la tienda."},
                {"role": "user", "content": prompt}
            ],
            temperature=0.5,
            max_tokens=400
        )
        answer = completion.choices[0].message.content.strip()

        return jsonify({"answer": answer})

    except Exception as e:
        return jsonify({"answer": f"Error al procesar la pregunta: {str(e)}"})

if __name__ == "__main__":
    app.run(host="0.0.0.0", port=int(os.environ.get("PORT", 5000)))
